# The On Screen Controller (short: OSC) is a minimal GUI integrated with mpv to
# offer basic mouse-controllability. It is intended to make interaction easier
# for new users and to enable precise and direct seeking.
#
# The OSC is enabled by default if mpv was compiled with Lua support. It can be
# disabled entirely using the --osc=no option.
osc=no

# Do not terminate when playing or seeking beyond the end of the file, and
# there is not next file to be played (and --loop is not used). Instead, pause
# the player. When trying to seek beyond end of the file, the player will
# attempt to seek to the last frame.
#
# The following arguments can be given:
#
# no: If the current file ends, go to the next file or terminate. (Default.)
#
# yes:  Don't terminate if the current file is the last playlist entry.
# Equivalent to --keep-open without arguments.
#
# always: Like yes, but also applies to files before the last playlist entry.
# This means playback will never automatically advance to the next file.
keep-open=always

# Decide whether to use network cache settings (default: auto).
#
# If enabled, use up to --cache-secs for the cache size (but still limited to
# --demuxer-max-bytes), and make the cached data seekable (if possible). If
# disabled, --cache-pause and related are implicitly disabled.
#
# The auto choice enables this depending on whether the stream is thought to
# involve network accesses or other slow media (this is an imperfect
# heuristic).
#
# Before mpv 0.30.0, this used to accept a number, which specified the size of
# the cache in kilobytes. Use e.g. --cache --demuxer-max-bytes=123k instead.
cache=yes

# If the player thinks that the media is not seekable (e.g. playing from a
# pipe, or it's an http stream with a server that doesn't support range
# requests), seeking will be disabled. This option can forcibly enable it. For
# seeks within the cache, there's a good chance of success.
force-seekable=yes

# Select when to use precise seeks that are not limited to keyframes. Such
# seeks require decoding video from the previous keyframe up to the target
# position and so can take some time depending on decoding performance. For
# some video formats, precise seeks are disabled. This option selects the
# default choice to use for seeks; it is possible to explicitly override that
# default in the definition of key bindings and in input commands.
hr-seek=yes

# Allow the video decoder to drop frames during seek, if these frames are
# before the seek target. If this is enabled, precise seeking can be faster,
# but if you're using video filters which modify timestamps or add new frames,
# it can lead to precise seeking skipping the target frame. This e.g. can break
# frame backstepping when deinterlacing is enabled.
#
# Default: yes
hr-seek-framedrop=yes

# This option behaves exactly like --autofit, except the window size is only
# changed if the window would be larger than the specified size.
autofit-larger=80%x80%

# Video output backend to be used. Experimental video renderer based on
# `libplacebo`. This supports almost the same set of features as `--vo=gpu`. Use
# the gpu-hq profile to use this driver with defaults set to high quality
# rendering.
vo=gpu-next
profile=gpu-hq

# Controls which type of graphics APIs will be accepted.
gpu-api=vulkan

[auto]
gpu-api=auto
